Map nədir? --->
            Map Java-da istifadə olunan bir interfeysdir və açar-dəyər (key-value) cütləri ilə işləyir.
            Bu, onu digər Collection interfeyslərindən fərqli edir. Map bir verilənlər strukturudur və əsas məqsədi
            hər bir açara qarşı uyğun bir dəyər saxlamaqdır. Açarlar unikal olmalıdır, yəni eyni açarı bir neçə dəfə
            istifadə etmək mümkün deyil, amma dəyərlər təkrarlana bilər.

Niyə Map Collection sayılmır? --->
            Java-da Map interfeysi Collection interfeysinin bir hissəsi deyil, çünki onun verilənləri idarə etmə prinsipi fərqlidir.
            Collection interfeysi sadəcə obyektlərin bir siyahısı ilə işləyir (məsələn, List, Set), halbuki Map açar-dəyər cütü saxlayır.

İstifadə qaydası --->
            Map interfeysində verilənlərə açarlar vasitəsilə müraciət edirik, halbuki Collection interfeyslərində verilənlərə indeks
            və ya iterator vasitəsilə müraciət edilir.

Dəstəklənən metodlar --->
            Collection interfeysi add(), remove() kimi metodları dəstəkləyir, amma Map interfeysində bu metodlar yoxdur.
            Bunun yerinə, put(), get(), remove() kimi metodlar istifadə edilir.


Map interfeysinin növləri --->
            Java-da müxtəlif növ Map implementasiyaları mövcuddur:

            1) HashMap: Açarları və dəyərləri təsadüfi qaydada saxlayır, sıralama yoxdur.
                        Hashing mexanizmi ilə işləyir. Sürətli performans təmin edir.

            2) LinkedHashMap: Açarları əlavə olunma sırasına görə saxlayır.
                              HashMap ilə oxşardır, amma daxil edilmə sırasını qoruyur.

            3) TreeMap: Açarları sıralı şəkildə saxlayır. NavigableMap interfeysini həyata keçirir və
                        açarların təbii sıralamasına əsaslanır.

            4) Hashtable: HashMapə bənzəyir, amma Hashtable köhnə versiyalı sinifdir və sinxronizasiya olunmuşdur, yəni thread-safedir.

Metodlar --->
            1) put(K key, V value): Xüsusi açara uyğun olaraq bir dəyər əlavə edir.
            2) get(Object key): Verilən açara uyğun dəyəri qaytarır.
            3) remove(Object key): Verilən açarla əlaqəli açar-dəyər cütünü silir.
            4) containsKey(Object key): Xüsusi açarın mapdə olub-olmadığını yoxlayır.
            5) containsValue(Object value): Xüsusi dəyərin mapdə olub-olmadığını yoxlayır.
            6) size(): Map-də neçə açar-dəyər cütü olduğunu qaytarır.
            7) keySet(): Map-dəki bütün açarları qaytarır.
            8) values(): Map-dəki bütün dəyərləri qaytarır.
            9) entrySet(): Map-dəki bütün açar-dəyər cütlərini qaytarır (Map.Entry<K, V> formatında).


Case --->
            1)Tələbələrin ID-ləri və onların qiymətləri ilə bir sistem yaratmaq istəyirsiniz (StudentGrades class-da nümunə var).
            2)Bir mətnin içindəki hər bir sözü saymaq istəyirsiniz (WordCount  class-da nümunə var).